#!/bin/bash
path=$(pwd)
# Copy kubeconfig
mkdir -p ~/.kube
cp  $path/.awscluster2/config ~/.kube/config
source ~/.profile

job_id=$(echo $CI_JOB_ID)
pipeline_id=$(echo $CI_PIPELINE_ID)
commit_id=$(echo $CI_COMMIT_SHA)
releaseTag=$(echo $RELEASE_TAG)
case_id=MQVF

time="date"
current_time=$(eval $time)

present_dir=$(pwd)
echo $present_dir

bash utils/pooling jobname:csi-cstor-snapshot
bash utils/e2e-cr-new jobname:csi-cstor-clone jobphase:Waiting
bash utils/e2e-cr-new jobname:csi-cstor-clone jobphase:Running init_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id" openebs_version:"$releaseTag"

################
# LitmusBook 1 #
################

echo "*******Performing clone litmus test**********"
# Cloning oep-e2e repository which contains all the test scripts
git clone https://$username:$password@github.com/openebs/e2e-tests.git

test_name=$(bash utils/generate_test_name testcase=cstor-csi-clone metadata="")
echo $test_name

cd e2e-tests
cp experiments/functional/cstor-csi/csi-clone/run_litmus_test.yml run_clone_test.yml

## Insert the value of Environment variables in litmus experiment. 
sed -i -e '/name: APP_NAMESPACE/{n;s/.*/            value: cstor-snap-clone/}' \
-e '/name: DATA_PERSISTENCE/{n;s/.*/            value: busybox/}' \
-e '/name: STORAGE_CLASS_NAME/{n;s/.*/            value: openebs-cstor-csi/}' \
-e '/name: APP_NAME/{n;s/.*/            value: busybox-clone/}' \
-e '/name: CLONED_PVC/{n;s/.*/            value: csi-clone/}' \
-e '/name: APP_PVC/{n;s/.*/            value: csi-vol/}' run_clone_test.yml

## Insert the set of variables for busybox data consistency util into configmap spec.
sed -i '/parameters.yml: |/a \
    blocksize: 4k\
    blockcount: 1024\
    testfile: csisnapclonetest
' run_clone_test.yml

echo "Running the litmus test for creation of clone.."
cat run_clone_test.yml

bash ../utils/litmus_job_runner label='name:cstor-csi-clone' job=run_clone_test.yml
cd ..
bash utils/dump_cluster_state;
bash utils/event_updater jobname:csi-cstor-clone $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

if [ "$?" != "0" ]; then
exit 1;
fi

################
# LitmusBook 2 #
################

echo "*******Performing deprovision clone litmus test**********"

run_id="deprovision";test_name=$(bash utils/generate_test_name testcase=cstor-csi-clone metadata=${run_id})
echo $test_name

cd e2e-tests
cp experiments/functional/cstor-csi/csi-clone/run_litmus_test.yml run_dep_clone_test.yml

## Insert the value of Environment variables in litmus experiment. 
sed -i -e '/name: APP_NAMESPACE/{n;s/.*/            value: cstor-snap-clone/}' \
-e '/name: DATA_PERSISTENCE/{n;s/.*/            value: busybox/}' \
-e '/name: STORAGE_CLASS_NAME/{n;s/.*/            value: openebs-cstor-csi/}' \
-e '/name: APP_NAME/{n;s/.*/            value: busybox-clone/}' \
-e '/name: CLONED_PVC/{n;s/.*/            value: csi-clone/}' \
-e '/name: APP_PVC/{n;s/.*/            value: csi-vol/}' run_dep_clone_test.yml

## Replace the job runner label for deprovision of clone
sed -i -e 's/name: cstor-csi-clone/name: cstor-csi-clone-dep/g' \
-e 's/value: '\''provision'\''/value: '\''deprovision'\''/g' run_dep_clone_test.yml

sed -i '/command:/i \
          - name: RUN_ID\
            value: '"$run_id"'\
' run_dep_clone_test.yml

## Insert the set of variables for busybox data consistency util into configmap spec.
sed -i '/parameters.yml: |/a \
    blocksize: 4k\
    blockcount: 1024\
    testfile: csisnapclonetest
' run_dep_clone_test.yml

echo "Running the litmus test for deletion of clone.."
cat run_dep_clone_test.yml

bash ../utils/litmus_job_runner label='name:cstor-csi-clone-dep' job=run_dep_clone_test.yml
cd ..
bash utils/dump_cluster_state;
bash utils/event_updater jobname:csi-cstor-clone $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

if [ "$?" != "0" ]; then
exit 1;
fi

################
# LitmusBook 3 #
################

echo "*******Performing deprovision snapshot litmus test**********"

run_id="deprovision";test_name=$(bash utils/generate_test_name testcase=cstor-csi-snapshot metadata=${run_id})
echo $test_name

cd e2e-tests
cp experiments/functional/cstor-csi/csi-snapshot/run_litmus_test.yml run_dep_snapshot_test.yml

sed -i -e 's/name: cstor-csi-snapshot/name: cstor-csi-snapshot-dep/g' \
-e 's/value: '\''provision'\''/value: '\''deprovision'\''/g' run_dep_snapshot_test.yml

## Replace the value of DATA_PERSISTENCE with application name in litmus experiment. 
sed -i -e '/name: DATA_PERSISTENCE/{n;s/.*/            value: busybox/}' \
-e '/name: APP_NAMESPACE/{n;s/.*/            value: cstor-snap-clone/}' \
-e '/name: APP_PVC/{n;s/.*/            value: csi-vol/}' run_dep_snapshot_test.yml

sed -i '/command:/i \
          - name: RUN_ID\
            value: '"$run_id"'\
' run_dep_snapshot_test.yml

## Insert the set of variables for busybox data consistency util into configmap spec.
sed -i '/parameters.yml: |/a \
    blocksize: 4k\
    blockcount: 1024\
    testfile: csisnapclonetest
' run_dep_snapshot_test.yml

echo "Running the litmus test for deletion of snapshot.."
cat run_dep_snapshot_test.yml

bash ../utils/litmus_job_runner label='name:cstor-csi-snapshot-dep' job=run_dep_snapshot_test.yml
cd ..
bash utils/dump_cluster_state;
bash utils/event_updater jobname:csi-cstor-snapshot $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"
if [ "$?" != "0" ]; then
exit 1;
fi

################
# LitmusBook 4 #
################

echo "*******Deprovisioning Busybox Application****"

test_name=$(bash utils/generate_test_name testcase=busybox-deprovision-cstor-snap-clone metadata="")
echo $test_name

cd e2e-tests
echo "Running the litmus test for Busybox Deprovision.."

cp apps/busybox/deployers/run_litmus_test.yml busybox_dep_snap_clone.yml

sed -i -e 's/app: busybox-litmus/app: deprovision-busybox-snap-clone/g' \
-e 's/value: openebs-cstor-sparse/value: openebs-cstor-csi/g' \
-e 's/value: openebs-busybox/value: csi-vol/g' \
-e 's/value: statefulset/value: deployment/g' \
-e 's/value: provision/value: deprovision/g' \
-e 's/value: app-busybox-ns/value: cstor-snap-clone/g' busybox_dep_snap_clone.yml
cat busybox_dep_snap_clone.yml

bash ../utils/litmus_job_runner label='app:deprovision-busybox-snap-clone' job=busybox_dep_snap_clone.yml
cd ..
bash utils/dump_cluster_state;
bash utils/event_updater jobname:csi-cstor-clone $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

rc_val=$(echo $?)
current_time=$(eval $time)

if [ "$rc_val" != "0" ]; then
bash utils/e2e-cr-new jobname:csi-cstor-clone jobphase:Completed end_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id" openebs_version:"$releaseTag" test_result:Fail
exit 1;
fi

bash utils/e2e-cr-new jobname:csi-cstor-clone jobphase:Completed end_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id" openebs_version:"$releaseTag" test_result:Pass

if [ "$rc_val" != "0" ]; then
exit 1;
fi