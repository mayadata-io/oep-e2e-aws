#!/bin/bash
set -ex
mkdir ~/.kube
cp .kube/config ~/.kube/config

bash utils/e2e-cr jobname:e2e-metrics jobphase:Waiting
bash utils/e2e-cr jobname:e2e-metrics jobphase:Running 
# bash utils/e2e-cr jobname:cluster-cleanup jobphase:Waiting

# set environment variables
COVERAGE_NAMESPACE="e2e-metrics"
E2E_METRICS_PIPELINE_ID=$(echo $CI_PIPELINE_ID)
E2E_METRICS_RUN_ID=$(echo $CI_JOB_ID)
# create namespace for e2e-metric components
kubectl create ns $COVERAGE_NAMESPACE
# clone oep-e2e-aws repo to access files
git clone https://$username:$password@github.com/mayadata-io/oep-e2e-aws.git
git clone https://$username:$password@github.com/mayadata-io/oep-e2e.git
cp oep-e2e/.master-plan.yml oep-e2e-aws/.master-plan.yml
cd oep-e2e-aws
# create configmap from master test plan file
kubectl create configmap metrics-config-test -n $COVERAGE_NAMESPACE --from-file=.master-plan.yml --from-file=.gitlab-ci.yml
cd ..
# Cloning e2e-metrics repo 
git clone https://github.com/mayadata-io/e2e-metrics.git
# Creating kubernetes resources 
kubectl apply -f e2e-metrics/deploy/rbac.yaml
kubectl apply -f e2e-metrics/deploy/crd.yaml
kubectl create configmap metac-config-test -n $COVERAGE_NAMESPACE --from-file="e2e-metrics/deploy/metac-config.yaml"
kubectl apply -f e2e-metrics/deploy/operator.yaml
kubectl set env sts/e2e-metrics E2E_METRICS_PIPELINE_ID=$E2E_METRICS_PIPELINE_ID -n $COVERAGE_NAMESPACE
kubectl set env sts/e2e-metrics E2E_METRICS_RUN_ID=$E2E_METRICS_RUN_ID -n $COVERAGE_NAMESPACE
sleep 50
# Fetching coverage percentage from custom resource
e2e_coverage_cr=$(kubectl get pcover -n $COVERAGE_NAMESPACE --no-headers | awk '{print $1}')
kubectl get pcover $e2e_coverage_cr -n $COVERAGE_NAMESPACE -oyaml
kubectl get pcover -n $COVERAGE_NAMESPACE -o=jsonpath='{.items[0].result.coverage}{"\n"}'

bash utils/e2e-cr jobname:e2e-metrics jobphase:Completed