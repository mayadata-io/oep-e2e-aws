#!/bin/bash

set -ex


######################
##   Prerequisites  ##
######################

path=$(pwd)
# Copy kubeconfig
mkdir -p ~/.kube
cp  $path/.awscluster2/config ~/.kube/config

####################################
##  Sequencing and Running test   ##
####################################
bash utils/pooling jobname:tcid-dir-dmaas-cstor-non-restic
bash utils/e2e-cr jobname:tcid-dir-dmaas-schd-jiva-mysql-bucket jobphase:Running

kubectl get ns

PV_CLAIM_NAME="mysql-pv-jiva-claim"
NAMESPACE="jiva-mysql"
STORAGE_CLASS_NAME="openebs-jiva-default"
NODE_PORT="32758"

kubectl create ns ${NAMESPACE}

mkdir -p $path/jiva-mysql
cp -R $path/stages/14-director-gui-check/template/mysql-manifest $path/jiva-mysql

# Add pv claim name, namespace and storage class name in mysql-pvc.yaml
sed 's|name: mysql-pv-claim|name: '${PV_CLAIM_NAME}'|' -i $path/jiva-mysql/mysql-manifest/mysql-pvc.yaml
sed 's|storageClassName: openebs-jiva-default|storageClassName: '${STORAGE_CLASS_NAME}'|' -i $path/jiva-mysql/mysql-manifest/mysql-pvc.yaml
sed 's|namespace: mysql-dmaas-jiva|namespace: '${NAMESPACE}'|' -i $path/jiva-mysql/mysql-manifest/mysql-pvc.yaml

cat $path/jiva-mysql/mysql-manifest/mysql-pvc.yaml

# Add pv claim name and namespace in mysql-official.yaml
sed 's|namespace: mysql-dmaas-jiva|namespace: '${NAMESPACE}'|' -i $path/jiva-mysql/mysql-manifest/mysql-official.yaml
sed 's|claimName: mysql-pv-claim|claimName: '${PV_CLAIM_NAME}'|' -i $path/jiva-mysql/mysql-manifest/mysql-official.yaml

cat $path/jiva-mysql/mysql-manifest/mysql-official.yaml

# Add node port and namespace in mysql-svc.yaml
sed 's|namespace: mysql-dmaas-jiva|namespace: '${NAMESPACE}'|' -i $path/jiva-mysql/mysql-manifest/mysql-svc.yaml
sed 's|nodePort: 32753|nodePort: '${NODE_PORT}'|' -i $path/jiva-mysql/mysql-manifest/mysql-svc.yaml

cat $path/jiva-mysql/mysql-manifest/mysql-svc.yaml


kubectl get ns
kubectl apply -f $path/jiva-mysql/mysql-manifest/
kubectl get pod -n ${NAMESPACE}

####################################
##   Prerequisites GUI Automation ##
####################################
cp  .kube/config ~/.kube/config
cp .kube/url ~/.kube/url
URL=$(cat ~/.kube/url)
echo $URL

CI_PROJECT_NAME=$(echo $CI_PROJECT_NAME)
CI_PIPELINE_ID=$(echo $CI_PIPELINE_ID)
GUID=grid-${CI_PROJECT_NAME}-${CI_PIPELINE_ID}

#copy aws and minio cred
mkdir -p ~/.dmaas
cp $AWS_CREDS ~/.dmaas/aws_cred
cp $MINIO_CREDS ~/.dmaas/minio_cred
#make empty directory
mkdir -p selenium-auto
cd selenium-auto
# Cloning oep repository which contains all the test scripts
git clone https://$username:$password@github.com/mayadata-io/gui-automation.git
cd gui-automation

#creating credential file
cat ~/.dmaas/aws_cred ~/.dmaas/minio_cred >> cred.ini

######################
##   Running test  ##
######################
python3.7 -m pip install -r requirements.txt
#Running tests with dmaasJivaMysql marker
python3.7 -m pytest -m dmaasJivaMysql --url $URL --environment remote --hub $grid -v --tests-per-worker 10 --html=./results/report.html


cp  $path/.awscluster2/config ~/.kube/config
cd ../..
bash utils/e2e-cr jobname:tcid-dir-dmaas-schd-jiva-mysql-bucket jobphase:Completed

